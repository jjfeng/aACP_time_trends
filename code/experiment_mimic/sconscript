"""
Experiment on MIMIC-IV
run process_mimic_iv.py first
Splits data into approximate years
"""
import os

from os.path import join
from nestly.scons import SConsWrap
from nestly import Nest
from SCons.Script import Environment, Command, AddOption
import numpy as np

Import('env')
localenv = env.Clone()

nest = SConsWrap(Nest(), localenv['output'], alias_environment=localenv)

START_YEAR = 2009
NUM_YEARS = 11
HUMAN_LOSS = 0.075
CONTROL_FACTOR = 1.6

@nest.add_target_with_env(localenv)
def create_nature(env, outdir, c):
    targets = [
        join(outdir, 'nature.pkl'),
        join(outdir, 'nature_log.txt')]
    cmd = [
        'python create_mimic_nature.py',
        '--start-year',
        START_YEAR,
        '--num-years',
        NUM_YEARS,
	'--out-file ${TARGETS[0]}',
	'--log-file ${TARGETS[1]}']
    return env.Command(
        targets,
        [],
        ' '.join(map(str, cmd)))

nest.add(
    'num_back_years',
    [2],
    label_func=lambda c: 'num_back_years_%d' % c)

nest.add(
    'seed',
    range(1),
    label_func=lambda c: 'seed_%d' % c)

nest.add_aggregate('proposer_list', list)

nest.add(
    'year',
    range(START_YEAR, START_YEAR + NUM_YEARS),
    label_func=lambda c: 'year_%d' % c)

nest.add(
    'quarter',
    range(4),
    label_func=lambda c: 'quarter_%d' % c)

@nest.add_target_with_env(localenv)
def fit_mimic_year_model(env, outdir, c):
    targets = [
        join(outdir, 'model.pkl'),
        join(outdir, 'model_log.txt')]
    c['proposer_list'].append(targets[0])
    cmd = [
        'python run_script.py',
        '${TARGETS[0]}',
        'fit_mimic_year_model.py',
	'--num-back-years',
    c['num_back_years'],
	'--year',
        c['year'],
	'--quarter',
        c['quarter'],
	'--out-file ${TARGETS[0]}',
	'--log-file ${TARGETS[1]}']
    return env.Command(
        targets,
        [],
        ' '.join(map(str, cmd)))

nest.pop('year')

@nest.add_target_with_env(localenv)
def create_proposer(env, outdir, c):
    targets = [
        join(outdir, 'proposer.pkl')]
    model_template = c['proposer_list'][0].replace("year_%d" % START_YEAR,
    "year_%d").replace("quarter_0", "quarter_%d")
    cmd = [
        'python create_mimic_proposer.py',
        '"experiment_mimic/%s"' % model_template,
        '--start-year',
        START_YEAR,
        '--num-years',
        NUM_YEARS,
		'--out-file ${TARGETS[0]}']
    return env.Command(
        targets,
        c['proposer_list'],
        ' '.join(map(str, cmd)))

nest.add_aggregate('approval_hists', list)

@nest.add_target_with_env(localenv)
def run_meta_exp(env, outdir, c):
    targets = [
        join(outdir, 'meta_exp_approval_hist.pkl'),
        join(outdir, 'meta_exp_approval_hist_log.txt'),
    ]
    c['approval_hists'].append(targets[0])
    cmd = [
        'python run_approval.py',
        '--seed',
        c['seed'],
        '--control-error-factor',
        CONTROL_FACTOR,
        '--ci-alpha 0.025',
        '--human-max-loss',
        HUMAN_LOSS,
        '--nature-file ${SOURCES[0]}',
        '--proposer-file ${SOURCES[1]}',
        '--policy-name MetaExpWeighting',
	'--out-file ${TARGETS[0]}',
	'--log-file ${TARGETS[1]}']

    sources = [c['create_nature'][0], c['create_proposer'][0]]
    return env.Command(
        targets,
        sources,
        ' '.join(map(str, cmd)))


nest.add(
    'eta',
    [1.5],
    label_func=lambda c: 'eta_%.2f' % c)

@nest.add_target_with_env(localenv)
def run_meta_exp_small(env, outdir, c):
    targets = [
        join(outdir, 'meta_exp_approval_small_hist.pkl'),
        join(outdir, 'meta_exp_approval_small_list_log.txt'),
    ]
    c['approval_hists'].append(targets[0])
    cmd = [
        'python run_approval.py',
        '--seed',
        c['seed'],
        '--eta',
        c['eta'],
        '--nature-file ${SOURCES[0]}',
        '--proposer-file ${SOURCES[1]}',
        '--policy-name MetaExpWeightingSmall',
	'--out-file ${TARGETS[0]}',
	'--log-file ${TARGETS[1]}']

    sources = [c['create_nature'][0], c['create_proposer'][0]]
    return env.Command(
        targets,
        sources,
        ' '.join(map(str, cmd)))

nest.add(
    'alpha',
    [0.5],
    label_func=lambda c: 'alpha_%.2f' % c)

@nest.add_target_with_env(localenv)
def run_online(env, outdir, c):
    targets = [
        join(outdir, 'online_approval_hist.pkl'),
        join(outdir, 'online_approval_hist_log.txt'),
    ]
    c['approval_hists'].append(targets[0])
    cmd = [
        'python run_approval.py',
        '--seed',
        c['seed'],
        '--eta',
        c['eta'],
        '--alpha',
        c['alpha'],
        '--human-max-loss',
        HUMAN_LOSS,
        '--nature-file ${SOURCES[0]}',
        '--proposer-file ${SOURCES[1]}',
        '--policy-name MarkovHedge',
	'--out-file ${TARGETS[0]}',
	'--log-file ${TARGETS[1]}']

    sources = [c['create_nature'][0], c['create_proposer'][0]]
    return env.Command(
        targets,
        sources,
        ' '.join(map(str, cmd)))

nest.pop('eta')

@nest.add_target_with_env(localenv)
def run_ttest_approval(env, outdir, c):
    targets = [
        join(outdir, 'ttest_approval_hist.pkl'),
        join(outdir, 'ttest_approval_hist_log.txt'),
    ]
    c['approval_hists'].append(targets[0])
    cmd = [
        'python run_approval.py',
        '--seed',
        c['seed'],
        '--human-max-loss',
        HUMAN_LOSS,
        '--nature-file ${SOURCES[0]}',
        '--proposer-file ${SOURCES[1]}',
        '--policy-name TTestApproval',
	'--out-file ${TARGETS[0]}',
	'--log-file ${TARGETS[1]}']

    sources = [c['create_nature'][0], c['create_proposer'][0]]
    return env.Command(
        targets,
        sources,
        ' '.join(map(str, cmd)))


@nest.add_target_with_env(localenv)
def run_blind_approval(env, outdir, c):
    targets = [
        join(outdir, 'blind_approval_hist.pkl'),
        join(outdir, 'blind_approval_hist_log.txt'),
    ]
    c['approval_hists'].append(targets[0])
    cmd = [
        'python run_approval.py',
        '--seed',
        c['seed'],
        '--human-max-loss',
        HUMAN_LOSS,
        '--nature-file ${SOURCES[0]}',
        '--proposer-file ${SOURCES[1]}',
        '--policy-name BlindApproval',
	'--out-file ${TARGETS[0]}',
	'--log-file ${TARGETS[1]}']

    sources = [c['create_nature'][0], c['create_proposer'][0]]
    return env.Command(
        targets,
        sources,
        ' '.join(map(str, cmd)))


@nest.add_target_with_env(localenv)
def run_fixed_approval(env, outdir, c):
    targets = [
        join(outdir, 'fixed_approval_hist.pkl'),
        join(outdir, 'fixed_approval_hist_log.txt'),
    ]
    c['approval_hists'].append(targets[0])
    cmd = [
        'python run_approval.py',
        '--seed',
        c['seed'],
        '--human-max-loss',
        HUMAN_LOSS,
        '--nature-file ${SOURCES[0]}',
        '--proposer-file ${SOURCES[1]}',
        '--policy-name FixedPolicy',
	'--out-file ${TARGETS[0]}',
	'--log-file ${TARGETS[1]}']

    sources = [c['create_nature'][0], c['create_proposer'][0]]
    return env.Command(
        targets,
        sources,
        ' '.join(map(str, cmd)))


@nest.add_target_with_env(localenv)
def plot_all_hists(env, outdir, c):
    targets = [
        join(outdir, 'approval_hist_loss.png'),
        join(outdir, 'approval_hist_human.png'),
    ]
    history_files = ",".join(["experiment_mimic/%s" % s for s in c['approval_hists']])
    cmd = [
        'python plot_policies.py',
	'--y-min',
        0,
	'--y-max',
        0.2,
	'--history-files',
        history_files,
	'--loss-plot ${TARGETS[0]}',
	'--human-plot ${TARGETS[1]}',
    ]

    return env.Command(
        targets,
        c['approval_hists'],
        ' '.join(map(str, cmd)))
